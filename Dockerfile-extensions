# This is a multi-stage build file, which means a stage is used to build
# the backend (dependencies), the frontend stack and a final production
# stage re-using assets from the build stages. This keeps the final production
# image minimal in size.


# Stage 1 - Backend build environment
# includes compilers and build tooling to create the environment
FROM python:3.8-slim-buster AS backend-build

RUN apt-get update && apt-get install -y --no-install-recommends \
        pkg-config \
        build-essential \
        python3-dev \
        git \
        libpq-dev \
        libxml2-dev \
        libxslt-dev \
        libxmlsec1-dev \
        zlib1g-dev \
        libxmlsec1-openssl \
        # weasyprint deps
        libcairo2 \
        libpango-1.0-0 \
        libpangocairo-1.0-0 \
        libgdk-pixbuf2.0-0 \
        libffi-dev \
        shared-mime-info \
    && rm -rf /var/lib/apt/lists/*

        # build-essential python3-dev python3-pip python3-setuptools python3-wheel python3-cffi

WORKDIR /app
RUN mkdir /app/src

# Ensure we use the latest version of pip
RUN pip install pip -U
COPY ./requirements /app/requirements
RUN pip install -r requirements/setuptools.txt

ARG ENVIRONMENT=extensions
RUN pip install -r requirements/${ENVIRONMENT}.txt

# Stage 2 - Build the production image with the custom extensions
FROM openformulieren/open-forms:latest AS production-build

ENV OPEN_FORMS_EXTENSIONS=token_exchange

WORKDIR /app

# Copy the dependencies of the installed from the backend build
COPY --from=backend-build /usr/local/lib/python3.8 /usr/local/lib/python3.8

USER maykin
